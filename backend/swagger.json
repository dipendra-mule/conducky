{
  "openapi": "3.0.0",
  "info": {
    "title": "Conducky API",
    "version": "1.0.0",
    "description": "API for Conducky - Code of Conduct incident management system",
    "contact": {
      "name": "Conducky Support",
      "url": "https://conducky.com",
      "email": "support@conducky.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Development server"
    },
    {
      "url": "https://api.conducky.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session-based authentication"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "User unique identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "firstName": {
            "type": "string",
            "description": "User first name"
          },
          "lastName": {
            "type": "string",
            "description": "User last name"
          },
          "role": {
            "type": "string",
            "enum": ["SUPERADMIN", "ADMIN", "RESPONDENT", "GUEST"],
            "description": "User global role"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user account is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Event unique identifier"
          },
          "name": {
            "type": "string",
            "description": "Event name"
          },
          "slug": {
            "type": "string",
            "description": "Event URL slug"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the event is currently active"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Event start date"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Event end date"
          },
          "contactEmail": {
            "type": "string",
            "format": "email",
            "description": "Contact email for the event"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Event creation timestamp"
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Report unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Report title/summary"
          },
          "description": {
            "type": "string",
            "description": "Detailed report description"
          },
          "type": {
            "type": "string",
            "enum": ["CODE_OF_CONDUCT", "HARASSMENT", "SAFETY", "OTHER"],
            "description": "Type of report"
          },
          "status": {
            "type": "string",
            "enum": ["SUBMITTED", "UNDER_REVIEW", "RESOLVED", "CLOSED"],
            "description": "Current status of the report"
          },
          "severity": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "CRITICAL"],
            "description": "Severity level of the incident"
          },
          "incidentAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the incident occurred"
          },
          "location": {
            "type": "string",
            "description": "Where the incident occurred"
          },
          "partiesInvolved": {
            "type": "string",
            "description": "Parties involved in the incident"
          },
          "contactPreference": {
            "type": "string",
            "enum": ["EMAIL", "PHONE", "NONE"],
            "description": "Preferred contact method for the reporter"
          },
          "isAnonymous": {
            "type": "boolean",
            "description": "Whether the report was submitted anonymously"
          },
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated event ID"
          },
          "reporterId": {
            "type": "string",
            "format": "uuid",
            "description": "Reporter user ID (null for anonymous)",
            "nullable": true
          },
          "assignedToId": {
            "type": "string",
            "format": "uuid",
            "description": "Assigned respondent user ID",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Report creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Report last update timestamp"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        }
      }
    }
  },
  "security": [
    {
      "sessionAuth": []
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User logout",
        "description": "Logout the current user",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": ["Events"],
        "summary": "Get all events",
        "description": "Retrieve a list of all events the user has access to",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Events"],
        "summary": "Create a new event",
        "description": "Create a new event (admin only)",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "contactEmail": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["name", "slug", "startDate", "endDate", "contactEmail"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get reports",
        "description": "Retrieve reports for events the user has access to",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "description": "Filter by event ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["SUBMITTED", "UNDER_REVIEW", "RESOLVED", "CLOSED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Reports"],
        "summary": "Create a new report",
        "description": "Submit a new incident report",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["CODE_OF_CONDUCT", "HARASSMENT", "SAFETY", "OTHER"]
                  },
                  "incidentAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "string"
                  },
                  "partiesInvolved": {
                    "type": "string"
                  },
                  "contactPreference": {
                    "type": "string",
                    "enum": ["EMAIL", "PHONE", "NONE"]
                  },
                  "isAnonymous": {
                    "type": "boolean"
                  },
                  "eventId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["title", "description", "type", "eventId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Report created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get users",
        "description": "Retrieve users (admin only)",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
} 