name: Run Backend and Frontend Tests

on:
  pull_request:
  push:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/conducky_test"
      SESSION_SECRET: ${{ secrets.SESSION_SECRET_TEST }}
      FRONTEND_BASE_URL: "http://localhost:3001"
      JEST_JUNIT_CLASSNAME: "{filepath}"
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests and generate JUnit and CTRF reports
        run: npm run test:ci
      - name: Upload CTRF report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-ctrf-report
          path: ctrf/ctrf-report.json
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
          files: ./coverage/lcov.info
          name: backend-coverage
      - name: Upload test results to Codecov
        if: always()
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
          name: backend-tests
          verbose: true

  frontend:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: "http://localhost:4000"
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests and generate JUnit and CTRF reports
        run: npm run test:ci
      - name: Upload CTRF report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-ctrf-report
          path: frontend/ctrf/ctrf-report.json
      - name: Upload results to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend
          files: ./coverage/lcov.info
          name: frontend-coverage

  publish-test-report:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Download backend CTRF report
        uses: actions/download-artifact@v4
        with:
          name: backend-ctrf-report
          path: backend-ctrf
      - name: Download frontend CTRF report
        uses: actions/download-artifact@v4
        with:
          name: frontend-ctrf-report
          path: frontend-ctrf
      - name: List downloaded artifacts
        run: |
          echo "Backend artifact:"
          ls -l backend-ctrf
          echo "Frontend artifact:"
          ls -l frontend-ctrf
      - name: Combine CTRF reports
        run: |
          mkdir -p combined-ctrf
          cp backend-ctrf/ctrf-report.json combined-ctrf/backend-ctrf-report.json
          cp frontend-ctrf/ctrf-report.json combined-ctrf/frontend-ctrf-report.json
          ls -l combined-ctrf
      - name: Publish Combined Test Report
        uses: ctrf-io/github-test-reporter@v1
        with:
          pull-request: true
          github-report: true
          report-path: 'combined-ctrf/*.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}